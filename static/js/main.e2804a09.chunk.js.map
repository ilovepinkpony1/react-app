{"version":3,"sources":["constants.js","utils.js","users-data.js","users-service-mock.js","components/RegistrationForm.js","components/LoginForm.js","components/User.js","components/Results.js","components/ModalUser.js","components/Table.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["HISTORY","createBrowserHistory","PASSWORD_LENGTH","REG_EXP_EMAIL","SORTING_TYPES","BOOLEAN","STRING","NUMBER","passwordValidator","value","length","emailValidator","email","test","String","toLowerCase","getrandomNameSurName","arr","Math","floor","random","getRandomData","arrNames","arrSurnames","max","min","sortByType","type","currType","arguments","undefined","sort","a","b","names","surNames","User","name","surName","age","isActive","Object","classCallCheck","this","usersData","i","push","construct","toConsumableArray","Registration","props","handleChangeInputLogin","handleChangeInputPassword","handleSubmitRegistration","inputData","react_default","createElement","className","onSubmit","event","placeholder","onChange","pass","disabled","LoginForm","handleSubmitLogin","showModal","onClick","Results","ModalUser","quitModal","Table","handleChangeInputSearch","data","modalValues","modalDisplay","searchValue","sortTable","usersMap","filter","user","includes","map","index","User_User","key","Navigation","login","registration","isLogined","logOut","react_router_dom","histoty","to","react_router","path","render","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","setState","_this2","Promise","resolve","then","users","catch","error","console","log","target","defineProperty","objectSpread","_this$state$registrat","preventDefault","localStorage","getItem","alert","setItem","_this$state$login","values","getData","_this$state","Component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"+aAEaA,EAAUC,cACVC,EAAkB,EAClBC,EAAgB,0JAIhBC,EACF,UADEA,EAEH,SAFGA,EAGH,SCTFC,EAA4BD,EAAnBE,EAAmBF,EAAXG,EAAWH,EAE7B,SAASI,EAAkBC,GAChC,OAAOA,EAAMC,QAAUR,EAGlB,SAASS,EAAeC,GAC7B,OAAOT,EAAcU,KAAKC,OAAOF,GAAOG,eAGnC,SAASC,EAAqBC,GAEnC,OAAOA,EADYC,KAAKC,MAAMD,KAAKE,SAAWH,EAAIP,SAa7C,SAASW,EAAcC,EAAUC,GACtC,MAAO,CACLP,EAAqBM,GACrBN,EAAqBO,IAZIC,EAaZ,GAbiBC,EAab,GAZPP,KAAKC,MAAMM,EAAMP,KAAKE,UAAYI,EAAM,EAAIC,KAKjDP,KAAKE,SAAW,IANlB,IAAsBI,EAAKC,EAkB3B,SAASC,EAAWC,EAAMC,GAAoB,IAAVX,EAAUY,UAAAnB,OAAA,QAAAoB,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAC/C,OAAQF,GACN,KAAKpB,EACH,OAAOU,EAAIc,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,GAAYK,EAAEL,KAC5C,KAAKtB,EACH,OAAOW,EAAIc,KAAK,SAACC,EAAGC,GAClB,OAAID,EAAEJ,GAAUb,cAAgBkB,EAAEL,GAAUb,cACnC,EAELiB,EAAEJ,GAAUb,cAAgBkB,EAAEL,GAAUb,eAClC,EAEH,IAEX,KAAKV,EACH,OAAOY,EAAIc,KAAK,SAACC,EAAGC,GAAJ,OACdD,EAAEJ,KAAcK,EAAEL,GAAY,EAAII,EAAEJ,IAAa,EAAI,IAEzD,QACE,MAAO,ICgBb,IAnEA,IAAMM,EAAQ,CACZ,QACA,OACA,SACA,QACA,SACA,YACA,UACA,SACA,SACA,YACA,UACA,SACA,SACA,OACA,UACA,UACA,UACA,aACA,SACA,QACA,UACA,MACA,SACA,QACA,UAGIC,EAAW,CACf,WACA,QACA,QACA,YACA,SACA,SACA,OACA,SACA,OACA,UACA,SACA,MACA,QACA,QACA,UACA,UACA,SACA,QACA,cACA,SACA,UACA,YACA,UACA,SACA,UAGIC,EACJ,SAAAA,EAAYC,EAAMC,EAASC,EAAKC,GAAWC,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,GACzCO,KAAKN,KAAOA,EACZM,KAAKL,QAAUA,EACfK,KAAKJ,IAAMA,EACXI,KAAKH,SAAWA,GAIPI,EAAY,GAEhBC,EAAI,EAAGA,EF/DY,GE+DMA,IAChCD,EAAUE,KAAVL,OAAAM,EAAA,EAAAN,CAAmBL,EAAnBK,OAAAO,EAAA,EAAAP,CAA2BpB,EAAca,EAAOC,MCrE3C,wBCGQ,SAASc,EAAaC,GAAO,IAExCC,EAIED,EAJFC,uBACAC,EAGEF,EAHFE,0BACAC,EAEEH,EAFFG,yBACAC,EACEJ,EADFI,UAEF,OACEC,EAAAvB,EAAAwB,cAAA,WACED,EAAAvB,EAAAwB,cAAA,KAAGC,UAAU,4BAAb,gBACAF,EAAAvB,EAAAwB,cAAA,QAAME,SAAU,SAACC,GAAD,OAAWN,EAAyBM,IAAQF,UAAU,qBACpEF,EAAAvB,EAAAwB,cAAA,sBAEED,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,QACLU,KAAK,QACLuB,YAAY,eACZnD,MAAO6C,EAAUjB,KACjBwB,SAAU,SAACF,GAAD,OAAWR,EAAuBQ,EAAO,iBACnDF,UAAU,8BAIdF,EAAAvB,EAAAwB,cAAA,yBAEED,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,WACLU,KAAK,WACLuB,YAAY,WACZnD,MAAO6C,EAAUQ,KACjBD,SAAU,SAACF,GAAD,OAAWP,EAA0BO,EAAO,iBACtDF,UAAU,8BAIdF,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,SACLlB,MAAM,WACNsD,UACEvD,EAAkB8C,EAAUQ,QAASnD,EAAe2C,EAAUjB,MAIhEoB,UAAU,6CC3CL,SAASO,EAAUd,GAAO,IAErCE,EAIEF,EAJFE,0BACAD,EAGED,EAHFC,uBACAc,EAEEf,EAFFe,kBACAX,EACEJ,EADFI,UAGF,OACEC,EAAAvB,EAAAwB,cAAA,WACED,EAAAvB,EAAAwB,cAAA,KAAGC,UAAU,qBAAb,yBACAF,EAAAvB,EAAAwB,cAAA,QAAME,SAAU,SAACC,GAAD,OAAWM,EAAkBN,IAAQF,UAAU,cAC7DF,EAAAvB,EAAAwB,cAAA,sBAEED,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,QACLU,KAAK,QACLuB,YAAY,eACZC,SAAU,SAACF,GAAD,OAAWR,EAAuBQ,EAAO,UACnDlD,MAAO6C,EAAUjB,KACjBoB,UAAU,uBAIdF,EAAAvB,EAAAwB,cAAA,yBAEED,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,WACLU,KAAK,WACLuB,YAAY,WACZC,SAAU,SAACF,GAAD,OAAWP,EAA0BO,EAAO,UACtDlD,MAAO6C,EAAUQ,KACjBL,UAAU,uBAIdF,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,SACLlB,MAAM,QACNsD,UACEvD,EAAkB8C,EAAUQ,QAASnD,EAAe2C,EAAUjB,MAIhEoB,UAAU,sCC9CL,SAASrB,EAAKc,GAAO,IAC1Bb,EAA4Ca,EAA5Cb,KAAMC,EAAsCY,EAAtCZ,QAASC,EAA6BW,EAA7BX,IAAKC,EAAwBU,EAAxBV,SAAU0B,EAAchB,EAAdgB,UAEtC,OACEX,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,WACZU,QAAS,kBAAMD,EAAU,CACvB7B,OACAC,UACAC,MACAC,eAEFe,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,aAAapB,GAC3BkB,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,aAAanB,GAC3BiB,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,aAAalB,GAC3BgB,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,aAAajB,EAAW,MAAQ,mBCdrC,SAAS4B,EAAQlB,GAAO,IAC7BzC,EAAUyC,EAAVzC,MACR,OACE8C,EAAAvB,EAAAwB,cAAA,qBAAa/C,SCHF,SAAS4D,EAAUnB,GAAO,IAErCb,EAKEa,EALFb,KACAC,EAIEY,EAJFZ,QACAC,EAGEW,EAHFX,IACAC,EAEEU,EAFFV,SACA8B,EACEpB,EADFoB,UAEF,OACEf,EAAAvB,EAAAwB,cAAA,OAAKC,UAAU,iBACbF,EAAAvB,EAAAwB,cAAA,kBAAUnB,GACVkB,EAAAvB,EAAAwB,cAAA,sBAAclB,GACdiB,EAAAvB,EAAAwB,cAAA,iBAASjB,GACTgB,EAAAvB,EAAAwB,cAAA,oBAAYhB,EAAW,MAAQ,MAC/Be,EAAAvB,EAAAwB,cAAA,QAAMW,QAAS,kBAAMG,MAArB,eCTEjE,EAA4BD,EAAnBE,EAAmBF,EAAXG,EAAWH,EAErB,SAASmE,EAAMrB,GAAO,IAEjCsB,EAQEtB,EARFsB,wBACAN,EAOEhB,EAPFgB,UACAI,EAMEpB,EANFoB,UACAG,EAKEvB,EALFuB,KACAC,EAIExB,EAJFwB,YACAC,EAGEzB,EAHFyB,aACAC,EAEE1B,EAFF0B,YACAC,EACE3B,EADF2B,UAGF,GAAIJ,EAAK/D,OAAS,EAAG,CACnB,IAAMoE,EAAWL,EACdM,OAAO,SAAAC,GAAI,OACRA,EAAK3C,KAAKtB,cAAckE,SAASL,EAAY7D,gBAC7CiE,EAAK1C,QAAQvB,cAAckE,SAASL,EAAY7D,iBAEnDmE,IAAI,SAACF,EAAMG,GACV,OACE5B,EAAAvB,EAAAwB,cAAC4B,EAAD,CACE/C,KAAM2C,EAAK3C,KACXC,QAAS0C,EAAK1C,QACdC,IAAKyC,EAAKzC,IACVC,SAAUwC,EAAKxC,SACf6C,IAAKF,EACLjB,UAAWA,MAInB,OACEX,EAAAvB,EAAAwB,cAAA,OAAKC,UAAU,iBACQ,KAApBqB,EAASpE,OAAgB,KAAO6C,EAAAvB,EAAAwB,cAACY,EAAD,CAAS3D,MAAOqE,EAASpE,SAC1D6C,EAAAvB,EAAAwB,cAAA,SACE7B,KAAK,OACLU,KAAK,SACL5B,MAAOmE,EACPf,SAAU,SAACF,GAAD,OAAWa,EAAwBb,IAC7CF,UAAU,eACVG,YAAY,WAEdL,EAAAvB,EAAAwB,cAAA,SAAOC,UAAU,eACfF,EAAAvB,EAAAwB,cAAA,SAAOC,UAAU,qBACfF,EAAAvB,EAAAwB,cAAA,UACED,EAAAvB,EAAAwB,cAAA,MAAIW,QAAS,kBAAMU,EAAUvE,EAAQ,UAArC,QACAiD,EAAAvB,EAAAwB,cAAA,MAAIW,QAAS,kBAAMU,EAAUvE,EAAQ,aAArC,WACAiD,EAAAvB,EAAAwB,cAAA,MAAIW,QAAS,kBAAMU,EAAUtE,EAAQ,SAArC,OACAgD,EAAAvB,EAAAwB,cAAA,MAAIW,QAAS,kBAAMU,EAAUxE,EAAS,cAAtC,YAKJkD,EAAAvB,EAAAwB,cAAA,SAAOC,UAAU,eAAeqB,IAEjCH,EACCpB,EAAAvB,EAAAwB,cAACa,EAAD,CACEhC,KAAMqC,EAAYrC,KAClBC,QAASoC,EAAYpC,QACrBC,IAAKmC,EAAYnC,IACjB+B,UAAWA,EACX9B,SAAUkC,EAAYlC,WAEtB,MAIV,OAAOe,EAAAvB,EAAAwB,cAAA,+BCnEM,SAAS8B,EAAWpC,GAAO,IAEtCuB,EAgBEvB,EAhBFuB,KACAc,EAeErC,EAfFqC,MACAC,EAcEtC,EAdFsC,aACAC,EAaEvC,EAbFuC,UACAtC,EAYED,EAZFC,uBACAC,EAWEF,EAXFE,0BACAoB,EAUEtB,EAVFsB,wBACAP,EASEf,EATFe,kBACAZ,EAQEH,EARFG,yBACAa,EAOEhB,EAPFgB,UACAI,EAMEpB,EANFoB,UACAI,EAKExB,EALFwB,YACAC,EAIEzB,EAJFyB,aACAC,EAGE1B,EAHF0B,YACAC,EAEE3B,EAFF2B,UACAa,EACExC,EADFwC,OAGF,OACEnC,EAAAvB,EAAAwB,cAACmC,EAAA,EAAD,CAAeC,QAAS5F,GACtBuD,EAAAvB,EAAAwB,cAAA,UAAQC,UAAU,cAChBF,EAAAvB,EAAAwB,cAAA,OAAKC,UAAU,sBACbF,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACXgC,EAAY,KACXlC,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACZF,EAAAvB,EAAAwB,cAACmC,EAAA,EAAD,CACElC,UAAU,kCACVoC,GAAG,iBAFL,iBAQHJ,EAAY,KACXlC,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACZF,EAAAvB,EAAAwB,cAACmC,EAAA,EAAD,CAAMlC,UAAU,kCAAkCoC,GAAG,UAArD,UAKJtC,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACZF,EAAAvB,EAAAwB,cAACmC,EAAA,EAAD,CAAMlC,UAAU,kCAAkCoC,GAAG,UAArD,UAIFtC,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACZF,EAAAvB,EAAAwB,cAACmC,EAAA,EAAD,CACElC,UAAU,kCACVoC,GAAG,WAFL,iBAODJ,EACClC,EAAAvB,EAAAwB,cAAA,MAAIC,UAAU,2BACZF,EAAAvB,EAAAwB,cAAA,UAAQC,UAAU,kCAAkCU,QAAS,kBAAMuB,MAAnE,YAIA,QAKVnC,EAAAvB,EAAAwB,cAAA,WAEAD,EAAAvB,EAAAwB,cAACsC,EAAA,EAAD,CACEC,KAAK,gBACLC,OAAQ,kBACNzC,EAAAvB,EAAAwB,cAACP,EAAD,CACEE,uBAAwBA,EACxBC,0BAA2BA,EAC3BC,yBAA0BA,EAC1BC,UAAWkC,OAIjBjC,EAAAvB,EAAAwB,cAACsC,EAAA,EAAD,CACEC,KAAK,SACLC,OAAQ,kBACNzC,EAAAvB,EAAAwB,cAACQ,EAAD,CACEZ,0BAA2BA,EAC3BD,uBAAwBA,EACxBc,kBAAmBA,EACnBX,UAAWiC,OAIjBhC,EAAAvB,EAAAwB,cAACsC,EAAA,EAAD,CACEC,KAAK,SACLC,OAAQ,kBACNzC,EAAAvB,EAAAwB,cAACe,EAAD,CACEC,wBAAyBA,EACzBN,UAAWA,EACXI,UAAWA,EACXG,KAAMA,EACNC,YAAaA,EACbC,aAAcA,EACdC,YAAaA,EACbC,UAAWA,OAIjBtB,EAAAvB,EAAAwB,cAACsC,EAAA,EAAD,CACEC,KAAK,UACLC,OAAQ,kBACNzC,EAAAvB,EAAAwB,cAACe,EAAD,CACEC,wBAAyBA,EACzBN,UAAWA,EACXI,UAAWA,EACXG,KAAMA,EACNC,YAAaA,EACbC,aAAcA,EACdC,YAAaA,YCtHJqB,cACnB,SAAAA,EAAY/C,GAAO,IAAAgD,EAAA,OAAAzD,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACjBC,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAAE,KAAAF,OAAA2D,EAAA,EAAA3D,CAAAwD,GAAAI,KAAA1D,KAAMO,KAEDoD,MAAQ,CACXf,MAAO,CACLlD,KAAM,GACNyB,KAAM,IAER0B,aAAc,CACZnD,KAAM,GACNyB,KAAM,IAERW,KAAM,GACNgB,WAAW,EACXb,YAAa,GACbD,cAAc,EACdD,YAAa,MAGfwB,EAAK/C,uBAAyB+C,EAAK/C,uBAAuBoD,KAA5B9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IAC9BA,EAAK9C,0BAA4B8C,EAAK9C,0BAA0BmD,KAA/B9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IACjCA,EAAK1B,wBAA0B0B,EAAK1B,wBAAwB+B,KAA7B9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IAC/BA,EAAK7C,yBAA2B6C,EAAK7C,yBAAyBkD,KAA9B9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IAChCA,EAAKjC,kBAAoBiC,EAAKjC,kBAAkBsC,KAAvB9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IACzBA,EAAKhC,UAAYgC,EAAKhC,UAAUqC,KAAf9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IACjBA,EAAK5B,UAAY4B,EAAK5B,UAAUiC,KAAf9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IACjBA,EAAKrB,UAAYqB,EAAKrB,UAAU0B,KAAf9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IACjBA,EAAKR,OAASQ,EAAKR,OAAOa,KAAZ9D,OAAA+D,EAAA,EAAA/D,CAAAyD,IA3BGA,yEA8BTvE,EAAMC,GACde,KAAK8D,SAAS,CACZhC,KAAM/C,EAAWC,EAAMC,EAAUe,KAAK2D,MAAM7B,0CAItC,IAAAiC,EAAA/D,KRzCiB,IAAIgE,QAAQ,SAAAC,GAAO,OAAIA,EAAQhE,KQ2CrDiE,KAAK,SAAAC,GACJJ,EAAKD,SAAS,CACZhC,KAAMqC,MAGTC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,oDAGTrD,EAAOwD,GAC5BxE,KAAK8D,SAALhE,OAAA2E,EAAA,EAAA3E,CAAA,GACG0E,EADH1E,OAAA4E,EAAA,EAAA5E,CAAA,GAEOE,KAAK2D,MAAMa,GAFlB,CAGI9E,KAAMsB,EAAMwD,OAAO1G,4DAKCkD,EAAOwD,GAC/BxE,KAAK8D,SAALhE,OAAA2E,EAAA,EAAA3E,CAAA,GACG0E,EADH1E,OAAA4E,EAAA,EAAA5E,CAAA,GAEOE,KAAK2D,MAAMa,GAFlB,CAGIrD,KAAMH,EAAMwD,OAAO1G,0DAKDkD,GACtBhB,KAAK8D,SAAS,CACZ7B,YAAajB,EAAMwD,OAAO1G,yDAILkD,GAAO,IAAA2D,EACP3E,KAAK2D,MAAMd,aAA1BnD,EADsBiF,EACtBjF,KAAMyB,EADgBwD,EAChBxD,KAEdH,EAAM4D,iBACDC,aAAaC,QAAQpF,GAUxBqF,MAAM,2BATNF,aAAaG,QAAQtF,EAAMyB,GAC3BnB,KAAK8D,SAAS,CACZjB,aAAc,CACZnD,KAAM,GACNyB,KAAM,MAGV4D,MAAM,sEAMQ/D,GAAO,IAAAiE,EACAjF,KAAK2D,MAAMf,MAA1BlD,EADeuF,EACfvF,KAAMyB,EADS8D,EACT9D,KAEdH,EAAM4D,iBACFC,aAAaC,QAAQpF,IACpBmF,aAAaC,QAAQpF,KAAUyB,GAClCnB,KAAK8D,SAAS,CACZhB,WAAW,EACXF,MAAO,CACLlD,KAAM,GACNyB,KAAM,MAGV4D,MAAM,uBACGF,aAAaC,QAAQpF,IAC3BmF,aAAaC,QAAQpF,KAAUyB,EAClC4D,MAAM,kBAENA,MAAM,iEAIAG,GACRlF,KAAK8D,SAAS,CACZ9B,cAAc,EACdD,YAAamD,wCAKflF,KAAK8D,SAAS,CACZ9B,cAAc,qCAKhBhC,KAAK8D,SAAS,CACZhB,WAAW,gDAKb9C,KAAKmF,2CAGE,IAAAC,EASHpF,KAAK2D,MAPPf,EAFKwC,EAELxC,MACAC,EAHKuC,EAGLvC,aACAf,EAJKsD,EAILtD,KACAgB,EALKsC,EAKLtC,UACAd,EANKoD,EAMLpD,aACAC,EAPKmD,EAOLnD,YACAF,EARKqD,EAQLrD,YAGF,OACEnB,EAAAvB,EAAAwB,cAAA,OAAKC,UAAU,QACbF,EAAAvB,EAAAwB,cAAC8B,EAAD,CACEC,MAAOA,EACPC,aAAcA,EACdf,KAAMA,EACNgB,UAAWA,EACXtC,uBAAwBR,KAAKQ,uBAC7BC,0BAA2BT,KAAKS,0BAChCoB,wBAAyB7B,KAAK6B,wBAC9BN,UAAWvB,KAAKuB,UAChBI,UAAW3B,KAAK2B,UAChBjB,yBAA0BV,KAAKU,yBAC/BY,kBAAmBtB,KAAKsB,kBACxBW,YAAaA,EACbD,aAAcA,EACdD,YAAaA,EACbG,UAAWlC,KAAKkC,UAChBa,OAAQ/C,KAAK+C,iBAnKUsC,aCMbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStC,OAAOzC,EAAAvB,EAAAwB,cAAC+E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAArB,GACjCA,EAAaqD","file":"static/js/main.e2804a09.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const HISTORY = createBrowserHistory();\r\nexport const PASSWORD_LENGTH = 6;\r\nexport const REG_EXP_EMAIL = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const REGISTRED = 'registred';\r\nexport const AUTHORIZED = 'authorized';\r\nexport const PEOPLE_COUNT = 30;\r\nexport const SORTING_TYPES = {\r\n  BOOLEAN: 'boolean',\r\n  STRING: 'string',\r\n  NUMBER: 'number',\r\n}","import { REG_EXP_EMAIL, PASSWORD_LENGTH, SORTING_TYPES } from './constants';\r\n\r\nconst { BOOLEAN, STRING, NUMBER } = SORTING_TYPES;\r\n\r\nexport function passwordValidator(value) {\r\n  return value.length >= PASSWORD_LENGTH ? true : false;\r\n}\r\n\r\nexport function emailValidator(email) {\r\n  return REG_EXP_EMAIL.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function getrandomNameSurName(arr) {\r\n  const randomName = Math.floor(Math.random() * arr.length);\r\n  return arr[randomName];\r\n}\r\n\r\nexport function getRandomAge(max, min) {\r\n  const age = Math.floor(min + Math.random() * (max + 1 - min));\r\n  return age;\r\n}\r\n\r\nexport function getRandomActive() {\r\n  return Math.random() > 0.5 ? true : false;\r\n}\r\n\r\nexport function getRandomData(arrNames, arrSurnames) {\r\n  return [\r\n    getrandomNameSurName(arrNames),\r\n    getrandomNameSurName(arrSurnames),\r\n    getRandomAge(65, 18),\r\n    getRandomActive()\r\n  ];\r\n}\r\n\r\nexport function sortByType(type, currType, arr = []) {\r\n  switch (type) {\r\n    case NUMBER:\r\n      return arr.sort((a, b) => a[currType] - b[currType]);\r\n    case STRING:\r\n      return arr.sort((a, b) => {\r\n        if (a[currType].toLowerCase() > b[currType].toLowerCase()) {\r\n          return 1;\r\n        }\r\n        if (a[currType].toLowerCase() < b[currType].toLowerCase()) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    case BOOLEAN:\r\n      return arr.sort((a, b) =>\r\n        a[currType] === b[currType] ? 0 : a[currType] ? -1 : 1\r\n      );\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n","import { getRandomData } from './utils';\r\nimport { PEOPLE_COUNT } from './constants';\r\n\r\nconst names = [\r\n  'Julie',\r\n  'Noah',\r\n  'Santos',\r\n  'Tracy',\r\n  'Elbert',\r\n  'Guadalupe',\r\n  'Willard',\r\n  'Eunice',\r\n  'Darren',\r\n  'Henrietta',\r\n  'Johnnie',\r\n  'Marion',\r\n  'Jerome',\r\n  'Mary',\r\n  'Enrique',\r\n  'Gilbert',\r\n  'Bethany',\r\n  'Bernadette',\r\n  'Maggie',\r\n  'Damon',\r\n  'Emanuel',\r\n  'Don',\r\n  'Melvin',\r\n  'Linda',\r\n  'Trevor'\r\n];\r\n\r\nconst surNames = [\r\n  'Mccarthy',\r\n  'Silva',\r\n  'Green',\r\n  'Hernandez',\r\n  'Benson',\r\n  'Jensen',\r\n  'Paul',\r\n  'Garcia',\r\n  'Bush',\r\n  'Osborne',\r\n  'Harris',\r\n  'Day',\r\n  'Curry',\r\n  'Moore',\r\n  'Mullins',\r\n  'Vasquez',\r\n  'Larson',\r\n  'Terry',\r\n  'Christensen',\r\n  'Cannon',\r\n  'Freeman',\r\n  'Fernandez',\r\n  'Jenkins',\r\n  'Medina',\r\n  'Bailey'\r\n];\r\n\r\nclass User {\r\n  constructor(name, surName, age, isActive) {\r\n    this.name = name;\r\n    this.surName = surName;\r\n    this.age = age;\r\n    this.isActive = isActive;\r\n  }\r\n}\r\n\r\nexport const usersData = [];\r\n\r\nfor (let i = 0; i < PEOPLE_COUNT; i++) {\r\n  usersData.push(new User(...getRandomData(names, surNames)));\r\n}","import { usersData } from './users-data';\r\n\r\nexport const findAll = () => new Promise(resolve => resolve(usersData));","import React from 'react';\r\nimport './registration.css';\r\nimport { passwordValidator, emailValidator } from '../utils';\r\n\r\n\r\nexport default function Registration(props) {\r\n  const {\r\n    handleChangeInputLogin,\r\n    handleChangeInputPassword,\r\n    handleSubmitRegistration,\r\n    inputData\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <p className='registration-description'>Registration</p>\r\n      <form onSubmit={(event) => handleSubmitRegistration(event)} className='registration-form'>\r\n        <label>\r\n          Login:\r\n          <input\r\n            type='email'\r\n            name='login'\r\n            placeholder='login(email)'\r\n            value={inputData.name}\r\n            onChange={(event) => handleChangeInputLogin(event, 'registration')}\r\n            className='registration-form__input'\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Password:\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            placeholder='password'\r\n            value={inputData.pass}\r\n            onChange={(event) => handleChangeInputPassword(event, 'registration')}\r\n            className='registration-form__input'\r\n          />\r\n        </label>\r\n\r\n        <input\r\n          type='submit'\r\n          value='register'\r\n          disabled={\r\n            passwordValidator(inputData.pass) && emailValidator(inputData.name)\r\n              ? false\r\n              : true\r\n          }\r\n          className='registration-form__submit-button'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './login.css';\r\nimport { passwordValidator, emailValidator } from '../utils';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function LoginForm(props) {\r\n  const {\r\n    handleChangeInputPassword,\r\n    handleChangeInputLogin,\r\n    handleSubmitLogin,\r\n    inputData\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <p className='login-description'>Login to your account</p>\r\n      <form onSubmit={(event) => handleSubmitLogin(event)} className='login-form'>\r\n        <label>\r\n          Login:\r\n          <input\r\n            type='email'\r\n            name='login'\r\n            placeholder='login(email)'\r\n            onChange={(event) => handleChangeInputLogin(event, 'login')}\r\n            value={inputData.name}\r\n            className='login-form__input'\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Password:\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            placeholder='password'\r\n            onChange={(event) => handleChangeInputPassword(event, 'login')}\r\n            value={inputData.pass}\r\n            className='login-form__input'\r\n          />\r\n        </label>\r\n\r\n        <input\r\n          type='submit'\r\n          value='login'\r\n          disabled={\r\n            passwordValidator(inputData.pass) && emailValidator(inputData.name)\r\n              ? false\r\n              : true\r\n          }\r\n          className='login-form__submit-button'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleChangeInputPassword: PropTypes.func,\r\n  handleChangeInputLogin: PropTypes.func,\r\n  handleSubmitLogin: PropTypes.func,\r\n  inputData: PropTypes.object,\r\n}","import React from 'react';\r\nimport './user.css';\r\n\r\nexport default function User(props) {\r\n  const { name, surName, age, isActive, showModal } = props;\r\n\r\n  return (\r\n    <tr className=\"user-row\"\r\n      onClick={() => showModal({\r\n        name,\r\n        surName,\r\n        age,\r\n        isActive\r\n      })}>\r\n      <td className=\"user-cell\">{name}</td>\r\n      <td className=\"user-cell\">{surName}</td>\r\n      <td className=\"user-cell\">{age}</td>\r\n      <td className=\"user-cell\">{isActive ? 'yes' : 'no'}</td>\r\n    </tr>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './result.css';\r\n\r\nexport default function Results(props) {\r\n  const { value } = props;\r\n  return (\r\n    <p>Results: {value}</p>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './modal.css';\r\n\r\nexport default function ModalUser(props) {\r\n  const { \r\n    name,\r\n    surName, \r\n    age, \r\n    isActive, \r\n    quitModal \r\n  } = props;\r\n  return (\r\n    <div className='modal-wrapper'>\r\n      <p>Name: {name}</p>\r\n      <p>SurrName: {surName}</p>\r\n      <p>Age: {age}</p>\r\n      <p>Online: {isActive ? 'yes' : 'no'}</p>\r\n      <span onClick={() => quitModal()}>☓</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport { SORTING_TYPES } from '../constants';\r\nimport './users.css';\r\nimport Results from './Results';\r\nimport ModalUser from './ModalUser';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst { BOOLEAN, STRING, NUMBER } = SORTING_TYPES;\r\n\r\nexport default function Table(props) {\r\n  const {\r\n    handleChangeInputSearch,\r\n    showModal,\r\n    quitModal,\r\n    data,\r\n    modalValues,\r\n    modalDisplay,\r\n    searchValue,\r\n    sortTable,\r\n  } = props;\r\n  \r\n  if (data.length > 0) {\r\n    const usersMap = data\r\n      .filter(user =>\r\n          user.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          user.surName.toLowerCase().includes(searchValue.toLowerCase())\r\n      )\r\n      .map((user, index) => {\r\n        return (\r\n          <User\r\n            name={user.name}\r\n            surName={user.surName}\r\n            age={user.age}\r\n            isActive={user.isActive}\r\n            key={index}\r\n            showModal={showModal}\r\n          />\r\n        );\r\n      });\r\n    return (\r\n      <div className='users-wrapper'>\r\n        {usersMap.length === 30 ? null : <Results value={usersMap.length} />}\r\n        <input\r\n          type='text'\r\n          name='search'\r\n          value={searchValue}\r\n          onChange={(event) => handleChangeInputSearch(event)}\r\n          className='users__input'\r\n          placeholder='search'\r\n        />\r\n        <table className='users-table'>\r\n          <thead className='users-table__head'>\r\n            <tr>\r\n              <td onClick={() => sortTable(STRING, 'name')}>Name</td>\r\n              <td onClick={() => sortTable(STRING, 'surName')}>Surname</td>\r\n              <td onClick={() => sortTable(NUMBER, 'age')}>Age</td>\r\n              <td onClick={() => sortTable(BOOLEAN, 'isActive')}>\r\n                Online\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='users-tbody'>{usersMap}</tbody>\r\n        </table>\r\n        {modalDisplay ? (\r\n          <ModalUser\r\n            name={modalValues.name}\r\n            surName={modalValues.surName}\r\n            age={modalValues.age}\r\n            quitModal={quitModal}\r\n            isActive={modalValues.isActive}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n}\r\n\r\n\r\nTable.propTypes = {\r\n  handleChangeInputSearch: PropTypes.func,\r\n  showModal: PropTypes.func,\r\n  quitModal: PropTypes.func,\r\n  data: PropTypes.array,\r\n  modalValues: PropTypes.object,\r\n  modalDisplay: PropTypes.bool,\r\n  searchValue: PropTypes.string,\r\n  sortTable: PropTypes.func,\r\n};","import React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { HISTORY } from '../constants';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport LoginForm from './LoginForm';\r\nimport Table from './Table';\r\nimport './navigation.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navigation(props) {\r\n  const {\r\n    data,\r\n    login,\r\n    registration,\r\n    isLogined,\r\n    handleChangeInputLogin,\r\n    handleChangeInputPassword,\r\n    handleChangeInputSearch,\r\n    handleSubmitLogin,\r\n    handleSubmitRegistration,\r\n    showModal,\r\n    quitModal,\r\n    modalValues,\r\n    modalDisplay,\r\n    searchValue,\r\n    sortTable,\r\n    logOut,\r\n  } = props;\r\n\r\n  return (\r\n    <BrowserRouter histoty={HISTORY}>\r\n      <header className='app-header'>\r\n        <nav className='app-header__navbar'>\r\n          <ul className='app-header__navbar-list'>\r\n            {isLogined ? null : (\r\n              <li className='app-header__navbar-item'>\r\n                <Link\r\n                  className='app-header__navbar-item__anchor'\r\n                  to='/registration'\r\n                >\r\n                  registration\r\n                </Link>\r\n              </li>\r\n            )}\r\n            {isLogined ? null : (\r\n              <li className='app-header__navbar-item'>\r\n                <Link className='app-header__navbar-item__anchor' to='/login'>\r\n                  login\r\n                </Link>\r\n              </li>\r\n            )}\r\n            <li className='app-header__navbar-item'>\r\n              <Link className='app-header__navbar-item__anchor' to='/users'>\r\n                Users\r\n              </Link>\r\n            </li>\r\n            <li className='app-header__navbar-item'>\r\n              <Link\r\n                className='app-header__navbar-item__anchor'\r\n                to='/active'\r\n              >\r\n                Online users\r\n              </Link>\r\n            </li>\r\n            {isLogined ? (\r\n              <li className='app-header__navbar-item'>\r\n                <button className='app-header__navbar-item__button' onClick={() => logOut()}>\r\n                  log out\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <Route\r\n        path='/registration'\r\n        render={() => (\r\n          <RegistrationForm\r\n            handleChangeInputLogin={handleChangeInputLogin}\r\n            handleChangeInputPassword={handleChangeInputPassword}\r\n            handleSubmitRegistration={handleSubmitRegistration}\r\n            inputData={registration}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path='/login'\r\n        render={() => (\r\n          <LoginForm\r\n            handleChangeInputPassword={handleChangeInputPassword}\r\n            handleChangeInputLogin={handleChangeInputLogin}\r\n            handleSubmitLogin={handleSubmitLogin}\r\n            inputData={login}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path='/users'\r\n        render={() => (\r\n          <Table\r\n            handleChangeInputSearch={handleChangeInputSearch}\r\n            showModal={showModal}\r\n            quitModal={quitModal}\r\n            data={data}\r\n            modalValues={modalValues}\r\n            modalDisplay={modalDisplay}\r\n            searchValue={searchValue}\r\n            sortTable={sortTable}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path='/active'\r\n        render={() => (\r\n          <Table\r\n            handleChangeInputSearch={handleChangeInputSearch}\r\n            showModal={showModal}\r\n            quitModal={quitModal}\r\n            data={data}\r\n            modalValues={modalValues}\r\n            modalDisplay={modalDisplay}\r\n            searchValue={searchValue}\r\n          />\r\n        )}\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nNavigation.propTypes = {\r\n  data: PropTypes.array,\r\n  login: PropTypes.object,\r\n  registration: PropTypes.object,\r\n  isLogined: PropTypes.bool,\r\n  handleChangeInputLogin: PropTypes.func,\r\n  handleChangeInputPassword: PropTypes.func,\r\n  handleChangeInputSearch: PropTypes.func,\r\n  handleSubmitLogin: PropTypes.func,\r\n  handleSubmitRegistration: PropTypes.func,\r\n  showModal: PropTypes.func,\r\n  quitModal: PropTypes.func,\r\n  modalValues: PropTypes.object,\r\n  modalDisplay: PropTypes.bool,\r\n  searchValue: PropTypes.string,\r\n  sortTable: PropTypes.func,\r\n  logOut: PropTypes.func,\r\n}\r\n","import React, { Component } from 'react';\nimport * as service from './users-service-mock';\nimport { sortByType } from './utils';\nimport Navigation from './components/Navigation';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: {\n        name: '',\n        pass: '',\n      },\n      registration: {\n        name: '',\n        pass: '',\n      },\n      data: [],\n      isLogined: false,\n      searchValue: '',\n      modalDisplay: false,\n      modalValues: null,\n    }\n\n    this.handleChangeInputLogin = this.handleChangeInputLogin.bind(this);\n    this.handleChangeInputPassword = this.handleChangeInputPassword.bind(this);\n    this.handleChangeInputSearch = this.handleChangeInputSearch.bind(this);\n    this.handleSubmitRegistration = this.handleSubmitRegistration.bind(this);\n    this.handleSubmitLogin = this.handleSubmitLogin.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.quitModal = this.quitModal.bind(this);\n    this.sortTable = this.sortTable.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  sortTable(type, currType) {\n    this.setState({\n      data: sortByType(type, currType, this.state.data),\n    });\n  }\n\n  getData() {\n    service.findAll()\n      .then(users => {\n        this.setState({\n          data: users,\n        })\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChangeInputLogin(event, target) {\n    this.setState({\n      [target]: {\n        ...this.state[target],\n        name: event.target.value,\n      }\n    });\n  }\n\n  handleChangeInputPassword(event, target) {\n    this.setState({\n      [target]: {\n        ...this.state[target],\n        pass: event.target.value,\n      }\n    });\n  }\n\n  handleChangeInputSearch(event) {\n    this.setState({\n      searchValue: event.target.value,\n    });\n  }\n\n  handleSubmitRegistration(event) {\n    const { name, pass } = this.state.registration;\n\n    event.preventDefault();\n    if (!localStorage.getItem(name)) {\n      localStorage.setItem(name, pass);\n      this.setState({\n        registration: {\n          name: '',\n          pass: '',\n        }\n      })\n      alert('successfully registered');\n    } else {\n      alert('You already registred!');\n    }\n  }\n\n  handleSubmitLogin(event) {\n    const { name, pass } = this.state.login;\n\n    event.preventDefault();\n    if (localStorage.getItem(name)\n      && localStorage.getItem(name) === pass) {\n      this.setState({\n        isLogined: true,\n        login: {\n          name: '',\n          pass: '',\n        }\n      })\n      alert('successfully login');\n    } else if (localStorage.getItem(name)\n      && localStorage.getItem(name) !== pass) {\n      alert('Wrong password');\n    } else {\n      alert('You are not registered yet!');\n    }\n  }\n\n  showModal(values) {\n    this.setState({\n      modalDisplay: true,\n      modalValues: values,\n    })\n  }\n\n  quitModal() {\n    this.setState({\n      modalDisplay: false,\n    })\n  }\n\n  logOut() {\n    this.setState({\n      isLogined: false,\n    })\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const { \n      login,\n      registration,\n      data,\n      isLogined,\n      modalDisplay,\n      searchValue,\n      modalValues,\n    } = this.state;\n\n    return (\n      <div className=\"main\">\n        <Navigation \n          login={login} \n          registration={registration} \n          data={data} \n          isLogined={isLogined}\n          handleChangeInputLogin={this.handleChangeInputLogin}\n          handleChangeInputPassword={this.handleChangeInputPassword}\n          handleChangeInputSearch={this.handleChangeInputSearch}\n          showModal={this.showModal}\n          quitModal={this.quitModal}\n          handleSubmitRegistration={this.handleSubmitRegistration}\n          handleSubmitLogin={this.handleSubmitLogin}\n          searchValue={searchValue}\n          modalDisplay={modalDisplay}\n          modalValues={modalValues}\n          sortTable={this.sortTable}\n          logOut={this.logOut}\n        />\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}